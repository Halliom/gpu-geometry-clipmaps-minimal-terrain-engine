#version 410 core

uniform sampler2D texTerrain; 

uniform mat4 projectionMatrix;
//uniform mat4 modelViewMatrix;
uniform vec4 map_position;
uniform vec4 offset;
uniform vec4 scale;

in vec4 gl_Vertex;
in vec3 gl_Color;

out vec4 color_vs;

void main(void)
{
	// position 

	vec4 pos = scale*(offset+vec4(gl_Vertex.xyz,1.0));
	vec4 pos_map = (pos+map_position)*2.0;
	pos.z=texture2D(texTerrain,pos_map.xy).x ;
	pos.z*=-0.05;
	gl_Position = projectionMatrix*pos;//*modelViewMatrix

	// color simple
	// color_vs=gl_Vertex;
	
	// color for nice shading	
	float h=texture2D(texTerrain,pos_map.xy).x ;
	float hx=texture2D(texTerrain,pos_map.xy+vec2(0.001,0.0)).x-h ;
	float hy=texture2D(texTerrain,pos_map.xy+vec2(0.0,0.001)).x-h ;
	vec3 dx;
	vec3 dy;
	dx.x=1.0;
	dx.y=0.0;
	dx.z=hx*55.0;
	dy.x=0.0;
	dy.y=1.0;
	dy.z=hy*55.0;
	vec3 n=cross(dx,dy);
	n=normalize(n);
	color_vs.x =  1.0-n.x*0.5-n.z+0.5;
	color_vs.y =  1.0-n.y*0.5-n.z+0.5;
	color_vs.z =  1.0-n.z+0.5;
	color_vs.w =  1.0;	
	
	
}
